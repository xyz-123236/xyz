二叉树：会出现右偏，树太高（一层数一次磁盘IO），导致过多的磁盘IO
B+Tree:一个节点最大容量是16kb，最下层的数节点是按从小到大排列的
InnoDB:
	2个文件，一个是表结构，一个是索引+表数据
	集群索引：索引与表数据在一起
	支持事务
	支持范围查找
	3级B+Tree大楷可以存储(16*1024/(8+6)) * (16*1024/(8+6)) * (16*1024/(1*1024)) = 2000w数据（一行数据大楷1kb）
	推荐使用自增id做主键，这样每插入一个数据都可以加到树的最后面，如果使用uuid在插入时会在中间插入，如果该节点满了，则会产生裂变
		查找的时候，数字的比较速度优于字符串（要转ascii）的比较
MyISAM：
	3个文件，一个是表结构，一个是索引，一个是表数据
	非集群索引：索引与表数据不在一起
	不支持事务
	
hash：
	生成hash值，可以快速定位
	不支持范围查找
	
联合索引：先排第一个字段，再排第二个，再排第三个。。。

utf8_bin 严格区分大小写  ----常用
utf8_general_cs 也是区分大小写的
utf8_general_ci 校对速度快，但准确度稍差。（ci大小写不敏感）  ----常用
utf8_unicode_ci 准确度高，但校对速度稍慢。
	如果你的应用有德语、法语或者俄语，请一定使用utf8_unicode_ci。一般用utf8_general_ci就够了，到现在也没发现问题。。。
	
动态转置
SET @temp1=''; 
SELECT @temp1:=CONCAT(@temp1,'max(IF(k=\'',`k`,'\'',',v,0)) AS ',`k`,',') FROM (SELECT DISTINCT `k` FROM sys_static) A;
SET @temp2=CONCAT('SELECT ',LEFT(@temp1,LENGTH(@temp1)-1),' FROM sys_static GROUP BY id');
PREPARE temp6 FROM @temp2;
EXECUTE temp6;

查询sql执行情况
EXPLAIN SELECT * FROM bill_det
重置自增id
ALTER TABLE `test` AUTO_INCREMENT=100001;

转义_,下划线是占位符，匹配下划线时需要转义
select lastname from employees wher lastname like '%A\_B%' escape '\'

向下递归查询：
delimiter $$ 
drop function if exists get_child_list$$ 
create function get_child_list(in_id varchar(10)) returns varchar(1000) 
begin 
	declare ids varchar(1000) default ''; 
	declare tempids varchar(1000); 
 
	set tempids = in_id; 
	while tempids is not null do 
		set ids = CONCAT_WS(',',ids,tempids); 
		select GROUP_CONCAT(id) into tempids from dept where FIND_IN_SET(pid,tempids)>0;  
	end while; 
	return ids; 
end  
$$ 
delimiter ; 
调用：select * from dept where find_in_set(id,get_child_list('1003'))

向上递归：
delimiter $$ 
drop function if exists get_parent_list$$ 
create function get_parent_list(in_id varchar(10)) returns varchar(1000) 
begin 
	declare ids varchar(1000); 
	declare tempid varchar(10); 
	 
	set tempid = in_id; 
	while tempid is not null do 
		set ids = CONCAT_WS(',',ids,tempid); 
		select pid into tempid from dept where id=tempid; 
	end while; 
	return ids; 
end 
$$ 
delimiter ; 
调用：select * from dept where find_in_set(id,get_parent_list('1010'))


1、《列》求和：（原则是把类型转为数字类型）
正确：	SELECT sum(CAST(ENTBY AS INTEGER)) FROM MES.TEST2
	SELECT SUM(NUM1),SUM(NUM2),SUM(NUM3),SUM(NUM4),SUM(NUM5) FROM MES.TEST2
	SELECT SUM(NUM1)+SUM(NUM2)+SUM(NUM3)+SUM(NUM4)+SUM(NUM5) FROM MES.TEST2
错误：	SELECT sum(ENTBY) FROM MES.TEST2
	SELECT sum(ifnull(ENTBY, 0)) FROM MES.TEST2

2、《行》求和：（原则是把null转为0）
正确：	SELECT ifnull(NUM1, 0)+ifnull(NUM2, 0)+ifnull(ENTBY, 0) FROM MES.TEST2
错误：	SELECT CAST(NUM1 AS INTEGER)+CAST(NUM2 AS INTEGER)+CAST(ENTBY AS INTEGER) FROM MES.TEST2
	SELECT NUM1+NUM2+NUM3 FROM MES.TEST2
